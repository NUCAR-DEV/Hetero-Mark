; -------- Disassembly --------------------
shader main
  asic(CI)
  type(VS)

  s_load_dword  s0, s[4:5], 0x01                        // 000000000000: C0000501
  s_mov_b32     m0, 0x00010000                          // 000000000004: BEFC03FF 00010000
  s_waitcnt     lgkmcnt(0)                              // 00000000000C: BF8C007F
  s_bfe_u32     s0, s0, 0x00100000                      // 000000000010: 9380FF00 00100000
  s_cmp_eq_u32  0, s0                                   // 000000000018: BF060080
  s_cselect_b32  s1, -1, 0                              // 00000000001C: 850180C1
  s_load_dword  s2, s[4:5], 0x03                        // 000000000020: C0010503
  s_cmp_eq_u32  0, s0                                   // 000000000024: BF060080
  s_cbranch_scc1  label_0028                            // 000000000028: BF85001D
  s_waitcnt     lgkmcnt(0)                              // 00000000002C: BF8C007F
  s_cmp_gt_u32  s0, s2                                  // 000000000030: BF080200
  s_cbranch_scc1  label_0028                            // 000000000034: BF85001A
  s_flbit_i32_b32  s3, s0                               // 000000000038: BE831500
  s_flbit_i32_b32  s4, s2                               // 00000000003C: BE841502
  s_sub_i32     s13, s3, s4                             // 000000000040: 818D0403
  s_lshl_b32    s3, s0, s13                             // 000000000044: 8F030D00
  s_sub_u32     s10, s2, s3                             // 000000000048: 808A0302
  s_cselect_b32  s14, s2, s10                           // 00000000004C: 850E0A02
  s_cselect_b32  s11, 0, 1                              // 000000000050: 850B8180
  s_add_u32     s5, s1, s11                             // 000000000054: 80050B01
  s_cmp_eq_u32  0, s13                                  // 000000000058: BF060D80
  s_cbranch_scc0  label_001A                            // 00000000005C: BF840002
  s_mov_b32     s1, s5                                  // 000000000060: BE810305
  s_branch      label_0028                              // 000000000064: BF82000E
label_001A:
  s_mov_b32     s4, s5                                  // 000000000068: BE840305
label_001B:
  s_add_u32     s4, s4, s4                              // 00000000006C: 80040404
  s_lshr_b32    s3, s3, 1                               // 000000000070: 90038103
  s_sub_u32     s11, s14, s3                            // 000000000074: 808B030E
  s_cselect_b32  s10, s14, s11                          // 000000000078: 850A0B0E
  s_cselect_b32  s12, 0, 1                              // 00000000007C: 850C8180
  s_add_u32     s9, s4, s12                             // 000000000080: 80090C04
  s_addk_i32    s13, 0xffff                             // 000000000084: B78DFFFF
  s_cmp_le_u32  s13, 0                                  // 000000000088: BF0B800D
  s_cbranch_scc1  label_0027                            // 00000000008C: BF850003
  s_mov_b32     s4, s9                                  // 000000000090: BE840309
  s_mov_b32     s14, s10                                // 000000000094: BE8E030A
  s_branch      label_001B                              // 000000000098: BF82FFF4
label_0027:
  s_mov_b32     s1, s9                                  // 00000000009C: BE810309
label_0028:
  s_mul_i32     s3, s1, s0                              // 0000000000A0: 93030001
  s_waitcnt     lgkmcnt(0)                              // 0000000000A4: BF8C007F
  s_sub_i32     s2, s2, s3                              // 0000000000A8: 81820302
  s_cmp_lt_u32  s8, s1                                  // 0000000000AC: BF0A0108
  s_cselect_b32  s0, s0, s2                             // 0000000000B0: 85000200
  s_load_dword  s1, s[6:7], 0x0c                        // 0000000000B4: C000870C
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  s_cmp_ge_i32  s1, 1                                   // 0000000000BC: BF038101
  s_cbranch_scc0  label_0631                            // 0000000000C0: BF840600
  s_load_dwordx2  s[2:3], s[6:7], 0x16                  // 0000000000C4: C0410716
  s_load_dwordx8  s[12:19], s[6:7], 0x0e                // 0000000000C8: C0C6070E
  s_load_dword  s4, s[6:7], 0x0d                        // 0000000000CC: C002070D
  s_ashr_i32    s5, s1, 31                              // 0000000000D0: 91059F01
  v_ashrrev_i32  v1, 31, v0                             // 0000000000D4: 3002009F
  v_lshlrev_b32  v2, 2, v0                              // 0000000000D8: 34040082
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_add_i32     v2, vcc, s16, v2                        // 0000000000E0: 4A040410
  v_lshl_b64    v[3:4], v[0:1], 3                       // 0000000000E4: D2C20003 00010700
  v_add_i32     v14, vcc, s14, v3                       // 0000000000EC: 4A1C060E
  v_mov_b32     v5, s15                                 // 0000000000F0: 7E0A020F
  v_addc_u32    v15, vcc, v5, v4, vcc                   // 0000000000F4: 501E0905
  v_add_i32     v3, vcc, s12, v3                        // 0000000000F8: 4A06060C
  v_mov_b32     v6, s13                                 // 0000000000FC: 7E0C020D
  v_addc_u32    v4, vcc, v6, v4, vcc                    // 000000000100: 50080906
  v_mov_b32     v13, 0                                  // 000000000104: 7E1A0280
  s_movk_i32    s6, 0x0000                              // 000000000108: B0060000
  s_movk_i32    s7, 0x0000                              // 00000000010C: B0070000
  s_movk_i32    s9, 0x0000                              // 000000000110: B0090000
  v_mov_b32     v7, 0                                   // 000000000114: 7E0E0280
label_0046:
  v_add_i32     v8, vcc, s9, v0                         // 000000000118: 4A100009
  v_ashrrev_i32  v9, 31, v8                             // 00000000011C: 3012109F
  v_lshl_b64    v[8:9], v[8:9], 2                       // 000000000120: D2C20008 00010508
  v_add_i32     v8, vcc, s18, v8                        // 000000000128: 4A101012
  v_mov_b32     v10, s19                                // 00000000012C: 7E140213
  v_addc_u32    v9, vcc, v10, v9, vcc                   // 000000000130: 5012130A
  flat_load_dword  v8, v[8:9]                           // 000000000134: DC300000 08000008
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000013C: BF8C0070
  ds_write_b32  v2, v8                                  // 000000000140: D8340000 00000802
  s_waitcnt     lgkmcnt(0)                              // 000000000148: BF8C007F
  s_barrier                                             // 00000000014C: BF8A0000
  s_mov_b32     s10, s16                                // 000000000150: BE8A0310
  s_mov_b32     s11, s17                                // 000000000154: BE8B0311
  s_mov_b32     s12, s6                                 // 000000000158: BE8C0306
  s_mov_b32     s13, s7                                 // 00000000015C: BE8D0307
  s_movk_i32    s14, 0x0100                             // 000000000160: B00E0100
  v_mov_b32     v16, v8                                 // 000000000164: 7E200308
  v_mov_b32     v8, v7                                  // 000000000168: 7E100307
  v_mov_b32     v7, v16                                 // 00000000016C: 7E0E0310
label_005C:
  s_cmp_gt_u32  s14, 0                                  // 000000000170: BF08800E
  s_cbranch_scc0  label_0629                            // 000000000174: BF8405CB
  flat_load_dwordx2  v[9:10], v[14:15]                  // 000000000178: DC340000 0900000E
  flat_load_dwordx2  v[11:12], v[3:4]                   // 000000000180: DC340000 0B000003
  v_mov_b32     v1, s10                                 // 000000000188: 7E02020A
  ds_read_b32   v1, v1                                  // 00000000018C: D8D80000 01000001
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 000000000194: BF8C0271
  v_mul_f32     v7, v13, v10                            // 000000000198: 100E150D
  v_mac_f32     v7, v8, v9                              // 00000000019C: 3E0E1308
  s_waitcnt     lgkmcnt(0)                              // 0000000001A0: BF8C007F
  v_sub_f32     v1, v1, v7                              // 0000000001A4: 08020F01
  s_waitcnt     vmcnt(0)                                // 0000000001A8: BF8C0F70
  v_mul_f32     v7, v12, v8                             // 0000000001AC: 100E110C
  v_mac_f32     v7, v11, v1                             // 0000000001B0: 3E0E030B
  ds_write_b32  v2, v7 offset:1024                      // 0000000001B4: D8340400 00000702
  s_waitcnt     lgkmcnt(0)                              // 0000000001BC: BF8C007F
  s_barrier                                             // 0000000001C0: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 0000000001C4: BF03FF00 00000100
  s_cbranch_scc0  label_0083                            // 0000000001CC: BF84000F
  s_movk_i32    s15, 0x007f                             // 0000000001D0: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 0000000001D4: 7D0C000F
  s_and_saveexec_b64  s[20:21], vcc                     // 0000000001D8: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 0000000001DC: 4A0E04FF 00000400
  s_cbranch_execz  label_0080                           // 0000000001E4: BF880006
  ds_read2_b32  v[9:10], v7 offset1:128                 // 0000000001E8: D8DC8000 09000007
  s_waitcnt     lgkmcnt(0)                              // 0000000001F0: BF8C007F
  v_add_f32     v7, v10, v9                             // 0000000001F4: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 0000000001F8: D8340400 00000702
label_0080:
  s_mov_b64     exec, s[20:21]                          // 000000000200: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 000000000204: BF8C007F
  s_barrier                                             // 000000000208: BF8A0000
label_0083:
  s_cmp_ge_i32  s0, 0x00000080                          // 00000000020C: BF03FF00 00000080
  s_cbranch_scc0  label_0094                            // 000000000214: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 000000000218: 7D0C00BF
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000021C: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 000000000220: 4A0E04FF 00000400
  s_cbranch_execz  label_0091                           // 000000000228: BF880006
  ds_read2_b32  v[9:10], v7 offset1:64                  // 00000000022C: D8DC4000 09000007
  s_waitcnt     lgkmcnt(0)                              // 000000000234: BF8C007F
  v_add_f32     v7, v10, v9                             // 000000000238: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 00000000023C: D8340400 00000702
label_0091:
  s_mov_b64     exec, s[20:21]                          // 000000000244: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 000000000248: BF8C007F
  s_barrier                                             // 00000000024C: BF8A0000
label_0094:
  s_cmp_ge_i32  s0, 64                                  // 000000000250: BF03C000
  s_cbranch_scc0  label_00A4                            // 000000000254: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 000000000258: 7D0C009F
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000025C: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 000000000260: 4A0E04FF 00000400
  s_cbranch_execz  label_00A1                           // 000000000268: BF880006
  ds_read2_b32  v[9:10], v7 offset1:32                  // 00000000026C: D8DC2000 09000007
  s_waitcnt     lgkmcnt(0)                              // 000000000274: BF8C007F
  v_add_f32     v7, v10, v9                             // 000000000278: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 00000000027C: D8340400 00000702
label_00A1:
  s_mov_b64     exec, s[20:21]                          // 000000000284: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 000000000288: BF8C007F
  s_barrier                                             // 00000000028C: BF8A0000
label_00A4:
  s_cmp_ge_i32  s0, 32                                  // 000000000290: BF03A000
  s_cbranch_scc0  label_00B4                            // 000000000294: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 000000000298: 7D0C008F
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000029C: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 0000000002A0: 4A0E04FF 00000400
  s_cbranch_execz  label_00B1                           // 0000000002A8: BF880006
  ds_read2_b32  v[9:10], v7 offset1:16                  // 0000000002AC: D8DC1000 09000007
  s_waitcnt     lgkmcnt(0)                              // 0000000002B4: BF8C007F
  v_add_f32     v7, v10, v9                             // 0000000002B8: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 0000000002BC: D8340400 00000702
label_00B1:
  s_mov_b64     exec, s[20:21]                          // 0000000002C4: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 0000000002C8: BF8C007F
  s_barrier                                             // 0000000002CC: BF8A0000
label_00B4:
  s_cmp_ge_i32  s0, 16                                  // 0000000002D0: BF039000
  s_cbranch_scc0  label_00C4                            // 0000000002D4: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 0000000002D8: 7D0C0087
  s_and_saveexec_b64  s[20:21], vcc                     // 0000000002DC: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 0000000002E0: 4A0E04FF 00000400
  s_cbranch_execz  label_00C1                           // 0000000002E8: BF880006
  ds_read2_b32  v[9:10], v7 offset1:8                   // 0000000002EC: D8DC0800 09000007
  s_waitcnt     lgkmcnt(0)                              // 0000000002F4: BF8C007F
  v_add_f32     v7, v10, v9                             // 0000000002F8: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 0000000002FC: D8340400 00000702
label_00C1:
  s_mov_b64     exec, s[20:21]                          // 000000000304: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 000000000308: BF8C007F
  s_barrier                                             // 00000000030C: BF8A0000
label_00C4:
  s_cmp_ge_i32  s0, 8                                   // 000000000310: BF038800
  s_cbranch_scc0  label_00D4                            // 000000000314: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 000000000318: 7D0C0083
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000031C: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 000000000320: 4A0E04FF 00000400
  s_cbranch_execz  label_00D1                           // 000000000328: BF880006
  ds_read2_b32  v[9:10], v7 offset1:4                   // 00000000032C: D8DC0400 09000007
  s_waitcnt     lgkmcnt(0)                              // 000000000334: BF8C007F
  v_add_f32     v7, v10, v9                             // 000000000338: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 00000000033C: D8340400 00000702
label_00D1:
  s_mov_b64     exec, s[20:21]                          // 000000000344: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 000000000348: BF8C007F
  s_barrier                                             // 00000000034C: BF8A0000
label_00D4:
  s_cmp_ge_i32  s0, 4                                   // 000000000350: BF038400
  s_cbranch_scc0  label_00E4                            // 000000000354: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 000000000358: 7D0C0081
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000035C: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 000000000360: 4A0E04FF 00000400
  s_cbranch_execz  label_00E1                           // 000000000368: BF880006
  ds_read2_b32  v[9:10], v7 offset1:2                   // 00000000036C: D8DC0200 09000007
  s_waitcnt     lgkmcnt(0)                              // 000000000374: BF8C007F
  v_add_f32     v7, v10, v9                             // 000000000378: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 00000000037C: D8340400 00000702
label_00E1:
  s_mov_b64     exec, s[20:21]                          // 000000000384: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 000000000388: BF8C007F
  s_barrier                                             // 00000000038C: BF8A0000
label_00E4:
  s_cmp_ge_i32  s0, 2                                   // 000000000390: BF038200
  s_cbranch_scc0  label_00F4                            // 000000000394: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 000000000398: 7D0C0080
  s_and_saveexec_b64  s[20:21], vcc                     // 00000000039C: BE94246A
  v_add_i32     v7, vcc, 0x00000400, v2                 // 0000000003A0: 4A0E04FF 00000400
  s_cbranch_execz  label_00F1                           // 0000000003A8: BF880006
  ds_read2_b32  v[9:10], v7 offset1:1                   // 0000000003AC: D8DC0100 09000007
  s_waitcnt     lgkmcnt(0)                              // 0000000003B4: BF8C007F
  v_add_f32     v7, v10, v9                             // 0000000003B8: 060E130A
  ds_write_b32  v2, v7 offset:1024                      // 0000000003BC: D8340400 00000702
label_00F1:
  s_mov_b64     exec, s[20:21]                          // 0000000003C4: BEFE0414
  s_waitcnt     lgkmcnt(0)                              // 0000000003C8: BF8C007F
  s_barrier                                             // 0000000003CC: BF8A0000
label_00F4:
  v_cmp_eq_i32  vcc, 0, v0                              // 0000000003D0: 7D040080
  s_and_saveexec_b64  s[20:21], vcc                     // 0000000003D4: BE94246A
  v_mov_b32     v7, s8                                  // 0000000003D8: 7E0E0208
  s_cbranch_execz  label_0110                           // 0000000003DC: BF880018
  v_mov_b32     v9, s10                                 // 0000000003E0: 7E12020A
  v_mov_b32     v10, s16                                // 0000000003E4: 7E140210
  ds_read_b32   v9, v9                                  // 0000000003E8: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 0000000003F0: D8D80400 0A00000A
  v_mul_hi_u32  v7, s1, v7                              // 0000000003F8: D2D40007 00020E01
  s_mul_i32     s15, s5, s8                             // 000000000400: 930F0805
  s_mul_i32     s22, s1, s8                             // 000000000404: 93160801
  v_mov_b32     v11, s12                                // 000000000408: 7E16020C
  v_add_i32     v7, vcc, s15, v7                        // 00000000040C: 4A0E0E0F
  v_add_i32     v11, vcc, s22, v11                      // 000000000410: 4A161616
  v_mov_b32     v12, s13                                // 000000000414: 7E18020D
  v_addc_u32    v12, vcc, v7, v12, vcc                  // 000000000418: 50181907
  v_lshl_b64    v[11:12], v[11:12], 2                   // 00000000041C: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 000000000424: 4A0A1602
  v_mov_b32     v11, s3                                 // 000000000428: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 00000000042C: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 000000000430: BF8C007F
  v_mac_f32     v10, s4, v9                             // 000000000434: 3E141204
  flat_store_dword  v[5:6], v10                         // 000000000438: DC700000 00000A05
label_0110:
  s_mov_b64     exec, s[20:21]                          // 000000000440: BEFE0414
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000444: BF8C0070
  s_barrier                                             // 000000000448: BF8A0000
  flat_load_dwordx2  v[9:10], v[14:15]                  // 00000000044C: DC340000 0900000E
  flat_load_dwordx2  v[11:12], v[3:4]                   // 000000000454: DC340000 0B000003
  s_add_u32     s20, s10, 4                             // 00000000045C: 8014840A
  s_addc_u32    s21, s11, 0                             // 000000000460: 8215800B
  v_mov_b32     v7, s20                                 // 000000000464: 7E0E0214
  ds_read_b32   v7, v7                                  // 000000000468: D8D80000 07000007
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 000000000470: BF8C0271
  v_mul_f32     v8, v8, v10                             // 000000000474: 10101508
  v_mac_f32     v8, v1, v9                              // 000000000478: 3E101301
  s_waitcnt     lgkmcnt(0)                              // 00000000047C: BF8C007F
  v_sub_f32     v7, v7, v8                              // 000000000480: 080E1107
  s_waitcnt     vmcnt(0)                                // 000000000484: BF8C0F70
  v_mul_f32     v8, v12, v1                             // 000000000488: 1010030C
  v_mac_f32     v8, v11, v7                             // 00000000048C: 3E100F0B
  ds_write_b32  v2, v8 offset:1024                      // 000000000490: D8340400 00000802
  s_add_u32     s22, s12, 1                             // 000000000498: 8016810C
  s_addc_u32    s23, s13, 0                             // 00000000049C: 8217800D
  s_waitcnt     lgkmcnt(0)                              // 0000000004A0: BF8C007F
  s_barrier                                             // 0000000004A4: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 0000000004A8: BF03FF00 00000100
  s_cbranch_scc0  label_013C                            // 0000000004B0: BF84000F
  s_movk_i32    s15, 0x007f                             // 0000000004B4: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 0000000004B8: 7D0C000F
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000004BC: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000004C0: 4A1004FF 00000400
  s_cbranch_execz  label_0139                           // 0000000004C8: BF880006
  ds_read2_b32  v[8:9], v8 offset1:128                  // 0000000004CC: D8DC8000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000004D4: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000004D8: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000004DC: D8340400 00000802
label_0139:
  s_mov_b64     exec, s[24:25]                          // 0000000004E4: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000004E8: BF8C007F
  s_barrier                                             // 0000000004EC: BF8A0000
label_013C:
  s_cmp_ge_i32  s0, 0x00000080                          // 0000000004F0: BF03FF00 00000080
  s_cbranch_scc0  label_014D                            // 0000000004F8: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 0000000004FC: 7D0C00BF
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000500: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000504: 4A1004FF 00000400
  s_cbranch_execz  label_014A                           // 00000000050C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:64                   // 000000000510: D8DC4000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000518: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000051C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000520: D8340400 00000802
label_014A:
  s_mov_b64     exec, s[24:25]                          // 000000000528: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000052C: BF8C007F
  s_barrier                                             // 000000000530: BF8A0000
label_014D:
  s_cmp_ge_i32  s0, 64                                  // 000000000534: BF03C000
  s_cbranch_scc0  label_015D                            // 000000000538: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 00000000053C: 7D0C009F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000540: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000544: 4A1004FF 00000400
  s_cbranch_execz  label_015A                           // 00000000054C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:32                   // 000000000550: D8DC2000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000558: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000055C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000560: D8340400 00000802
label_015A:
  s_mov_b64     exec, s[24:25]                          // 000000000568: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000056C: BF8C007F
  s_barrier                                             // 000000000570: BF8A0000
label_015D:
  s_cmp_ge_i32  s0, 32                                  // 000000000574: BF03A000
  s_cbranch_scc0  label_016D                            // 000000000578: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 00000000057C: 7D0C008F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000580: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000584: 4A1004FF 00000400
  s_cbranch_execz  label_016A                           // 00000000058C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:16                   // 000000000590: D8DC1000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000598: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000059C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000005A0: D8340400 00000802
label_016A:
  s_mov_b64     exec, s[24:25]                          // 0000000005A8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000005AC: BF8C007F
  s_barrier                                             // 0000000005B0: BF8A0000
label_016D:
  s_cmp_ge_i32  s0, 16                                  // 0000000005B4: BF039000
  s_cbranch_scc0  label_017D                            // 0000000005B8: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 0000000005BC: 7D0C0087
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000005C0: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000005C4: 4A1004FF 00000400
  s_cbranch_execz  label_017A                           // 0000000005CC: BF880006
  ds_read2_b32  v[8:9], v8 offset1:8                    // 0000000005D0: D8DC0800 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000005D8: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000005DC: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000005E0: D8340400 00000802
label_017A:
  s_mov_b64     exec, s[24:25]                          // 0000000005E8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000005EC: BF8C007F
  s_barrier                                             // 0000000005F0: BF8A0000
label_017D:
  s_cmp_ge_i32  s0, 8                                   // 0000000005F4: BF038800
  s_cbranch_scc0  label_018D                            // 0000000005F8: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 0000000005FC: 7D0C0083
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000600: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000604: 4A1004FF 00000400
  s_cbranch_execz  label_018A                           // 00000000060C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:4                    // 000000000610: D8DC0400 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000618: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000061C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000620: D8340400 00000802
label_018A:
  s_mov_b64     exec, s[24:25]                          // 000000000628: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000062C: BF8C007F
  s_barrier                                             // 000000000630: BF8A0000
label_018D:
  s_cmp_ge_i32  s0, 4                                   // 000000000634: BF038400
  s_cbranch_scc0  label_019D                            // 000000000638: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 00000000063C: 7D0C0081
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000640: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000644: 4A1004FF 00000400
  s_cbranch_execz  label_019A                           // 00000000064C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:2                    // 000000000650: D8DC0200 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000658: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000065C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000660: D8340400 00000802
label_019A:
  s_mov_b64     exec, s[24:25]                          // 000000000668: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000066C: BF8C007F
  s_barrier                                             // 000000000670: BF8A0000
label_019D:
  s_cmp_ge_i32  s0, 2                                   // 000000000674: BF038200
  s_cbranch_scc0  label_01AD                            // 000000000678: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 00000000067C: 7D0C0080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000680: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000684: 4A1004FF 00000400
  s_cbranch_execz  label_01AA                           // 00000000068C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:1                    // 000000000690: D8DC0100 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000698: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000069C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000006A0: D8340400 00000802
label_01AA:
  s_mov_b64     exec, s[24:25]                          // 0000000006A8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000006AC: BF8C007F
  s_barrier                                             // 0000000006B0: BF8A0000
label_01AD:
  v_cmp_eq_i32  vcc, 0, v0                              // 0000000006B4: 7D040080
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000006B8: BE98246A
  v_mov_b32     v8, s8                                  // 0000000006BC: 7E100208
  s_cbranch_execz  label_01C9                           // 0000000006C0: BF880018
  v_mov_b32     v9, s20                                 // 0000000006C4: 7E120214
  v_mov_b32     v10, s16                                // 0000000006C8: 7E140210
  ds_read_b32   v9, v9                                  // 0000000006CC: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 0000000006D4: D8D80400 0A00000A
  v_mul_hi_u32  v8, s1, v8                              // 0000000006DC: D2D40008 00021001
  s_mul_i32     s15, s5, s8                             // 0000000006E4: 930F0805
  s_mul_i32     s20, s1, s8                             // 0000000006E8: 93140801
  v_mov_b32     v11, s22                                // 0000000006EC: 7E160216
  v_add_i32     v8, vcc, s15, v8                        // 0000000006F0: 4A10100F
  v_add_i32     v11, vcc, s20, v11                      // 0000000006F4: 4A161614
  v_mov_b32     v12, s23                                // 0000000006F8: 7E180217
  v_addc_u32    v12, vcc, v8, v12, vcc                  // 0000000006FC: 50181908
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000000700: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 000000000708: 4A0A1602
  v_mov_b32     v11, s3                                 // 00000000070C: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 000000000710: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 000000000714: BF8C007F
  v_mac_f32     v10, s4, v9                             // 000000000718: 3E141204
  flat_store_dword  v[5:6], v10                         // 00000000071C: DC700000 00000A05
label_01C9:
  s_mov_b64     exec, s[24:25]                          // 000000000724: BEFE0418
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000728: BF8C0070
  s_barrier                                             // 00000000072C: BF8A0000
  flat_load_dwordx2  v[8:9], v[14:15]                   // 000000000730: DC340000 0800000E
  flat_load_dwordx2  v[10:11], v[3:4]                   // 000000000738: DC340000 0A000003
  s_add_u32     s20, s10, 8                             // 000000000740: 8014880A
  s_addc_u32    s21, s11, 0                             // 000000000744: 8215800B
  v_mov_b32     v12, s20                                // 000000000748: 7E180214
  ds_read_b32   v12, v12                                // 00000000074C: D8D80000 0C00000C
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 000000000754: BF8C0271
  v_mul_f32     v1, v1, v9                              // 000000000758: 10021301
  v_mac_f32     v1, v7, v8                              // 00000000075C: 3E021107
  s_waitcnt     lgkmcnt(0)                              // 000000000760: BF8C007F
  v_sub_f32     v1, v12, v1                             // 000000000764: 0802030C
  s_waitcnt     vmcnt(0)                                // 000000000768: BF8C0F70
  v_mul_f32     v8, v11, v7                             // 00000000076C: 10100F0B
  v_mac_f32     v8, v10, v1                             // 000000000770: 3E10030A
  ds_write_b32  v2, v8 offset:1024                      // 000000000774: D8340400 00000802
  s_add_u32     s22, s12, 2                             // 00000000077C: 8016820C
  s_addc_u32    s23, s13, 0                             // 000000000780: 8217800D
  s_waitcnt     lgkmcnt(0)                              // 000000000784: BF8C007F
  s_barrier                                             // 000000000788: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 00000000078C: BF03FF00 00000100
  s_cbranch_scc0  label_01F5                            // 000000000794: BF84000F
  s_movk_i32    s15, 0x007f                             // 000000000798: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 00000000079C: 7D0C000F
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000007A0: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000007A4: 4A1004FF 00000400
  s_cbranch_execz  label_01F2                           // 0000000007AC: BF880006
  ds_read2_b32  v[8:9], v8 offset1:128                  // 0000000007B0: D8DC8000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000007B8: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000007BC: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000007C0: D8340400 00000802
label_01F2:
  s_mov_b64     exec, s[24:25]                          // 0000000007C8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000007CC: BF8C007F
  s_barrier                                             // 0000000007D0: BF8A0000
label_01F5:
  s_cmp_ge_i32  s0, 0x00000080                          // 0000000007D4: BF03FF00 00000080
  s_cbranch_scc0  label_0206                            // 0000000007DC: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 0000000007E0: 7D0C00BF
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000007E4: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000007E8: 4A1004FF 00000400
  s_cbranch_execz  label_0203                           // 0000000007F0: BF880006
  ds_read2_b32  v[8:9], v8 offset1:64                   // 0000000007F4: D8DC4000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000007FC: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000800: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000804: D8340400 00000802
label_0203:
  s_mov_b64     exec, s[24:25]                          // 00000000080C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000810: BF8C007F
  s_barrier                                             // 000000000814: BF8A0000
label_0206:
  s_cmp_ge_i32  s0, 64                                  // 000000000818: BF03C000
  s_cbranch_scc0  label_0216                            // 00000000081C: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 000000000820: 7D0C009F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000824: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000828: 4A1004FF 00000400
  s_cbranch_execz  label_0213                           // 000000000830: BF880006
  ds_read2_b32  v[8:9], v8 offset1:32                   // 000000000834: D8DC2000 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000083C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000840: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000844: D8340400 00000802
label_0213:
  s_mov_b64     exec, s[24:25]                          // 00000000084C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000850: BF8C007F
  s_barrier                                             // 000000000854: BF8A0000
label_0216:
  s_cmp_ge_i32  s0, 32                                  // 000000000858: BF03A000
  s_cbranch_scc0  label_0226                            // 00000000085C: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 000000000860: 7D0C008F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000864: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000868: 4A1004FF 00000400
  s_cbranch_execz  label_0223                           // 000000000870: BF880006
  ds_read2_b32  v[8:9], v8 offset1:16                   // 000000000874: D8DC1000 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000087C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000880: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000884: D8340400 00000802
label_0223:
  s_mov_b64     exec, s[24:25]                          // 00000000088C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000890: BF8C007F
  s_barrier                                             // 000000000894: BF8A0000
label_0226:
  s_cmp_ge_i32  s0, 16                                  // 000000000898: BF039000
  s_cbranch_scc0  label_0236                            // 00000000089C: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 0000000008A0: 7D0C0087
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000008A4: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000008A8: 4A1004FF 00000400
  s_cbranch_execz  label_0233                           // 0000000008B0: BF880006
  ds_read2_b32  v[8:9], v8 offset1:8                    // 0000000008B4: D8DC0800 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000008BC: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000008C0: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000008C4: D8340400 00000802
label_0233:
  s_mov_b64     exec, s[24:25]                          // 0000000008CC: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000008D0: BF8C007F
  s_barrier                                             // 0000000008D4: BF8A0000
label_0236:
  s_cmp_ge_i32  s0, 8                                   // 0000000008D8: BF038800
  s_cbranch_scc0  label_0246                            // 0000000008DC: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 0000000008E0: 7D0C0083
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000008E4: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000008E8: 4A1004FF 00000400
  s_cbranch_execz  label_0243                           // 0000000008F0: BF880006
  ds_read2_b32  v[8:9], v8 offset1:4                    // 0000000008F4: D8DC0400 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000008FC: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000900: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000904: D8340400 00000802
label_0243:
  s_mov_b64     exec, s[24:25]                          // 00000000090C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000910: BF8C007F
  s_barrier                                             // 000000000914: BF8A0000
label_0246:
  s_cmp_ge_i32  s0, 4                                   // 000000000918: BF038400
  s_cbranch_scc0  label_0256                            // 00000000091C: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 000000000920: 7D0C0081
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000924: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000928: 4A1004FF 00000400
  s_cbranch_execz  label_0253                           // 000000000930: BF880006
  ds_read2_b32  v[8:9], v8 offset1:2                    // 000000000934: D8DC0200 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000093C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000940: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000944: D8340400 00000802
label_0253:
  s_mov_b64     exec, s[24:25]                          // 00000000094C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000950: BF8C007F
  s_barrier                                             // 000000000954: BF8A0000
label_0256:
  s_cmp_ge_i32  s0, 2                                   // 000000000958: BF038200
  s_cbranch_scc0  label_0266                            // 00000000095C: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 000000000960: 7D0C0080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000964: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000968: 4A1004FF 00000400
  s_cbranch_execz  label_0263                           // 000000000970: BF880006
  ds_read2_b32  v[8:9], v8 offset1:1                    // 000000000974: D8DC0100 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000097C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000980: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000984: D8340400 00000802
label_0263:
  s_mov_b64     exec, s[24:25]                          // 00000000098C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000990: BF8C007F
  s_barrier                                             // 000000000994: BF8A0000
label_0266:
  v_cmp_eq_i32  vcc, 0, v0                              // 000000000998: 7D040080
  s_and_saveexec_b64  s[24:25], vcc                     // 00000000099C: BE98246A
  v_mov_b32     v8, s8                                  // 0000000009A0: 7E100208
  s_cbranch_execz  label_0282                           // 0000000009A4: BF880018
  v_mov_b32     v9, s20                                 // 0000000009A8: 7E120214
  v_mov_b32     v10, s16                                // 0000000009AC: 7E140210
  ds_read_b32   v9, v9                                  // 0000000009B0: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 0000000009B8: D8D80400 0A00000A
  v_mul_hi_u32  v8, s1, v8                              // 0000000009C0: D2D40008 00021001
  s_mul_i32     s15, s5, s8                             // 0000000009C8: 930F0805
  s_mul_i32     s20, s1, s8                             // 0000000009CC: 93140801
  v_mov_b32     v11, s22                                // 0000000009D0: 7E160216
  v_add_i32     v8, vcc, s15, v8                        // 0000000009D4: 4A10100F
  v_add_i32     v11, vcc, s20, v11                      // 0000000009D8: 4A161614
  v_mov_b32     v12, s23                                // 0000000009DC: 7E180217
  v_addc_u32    v12, vcc, v8, v12, vcc                  // 0000000009E0: 50181908
  v_lshl_b64    v[11:12], v[11:12], 2                   // 0000000009E4: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 0000000009EC: 4A0A1602
  v_mov_b32     v11, s3                                 // 0000000009F0: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 0000000009F4: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 0000000009F8: BF8C007F
  v_mac_f32     v10, s4, v9                             // 0000000009FC: 3E141204
  flat_store_dword  v[5:6], v10                         // 000000000A00: DC700000 00000A05
label_0282:
  s_mov_b64     exec, s[24:25]                          // 000000000A08: BEFE0418
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000A0C: BF8C0070
  s_barrier                                             // 000000000A10: BF8A0000
  flat_load_dwordx2  v[8:9], v[14:15]                   // 000000000A14: DC340000 0800000E
  flat_load_dwordx2  v[10:11], v[3:4]                   // 000000000A1C: DC340000 0A000003
  s_add_u32     s20, s10, 12                            // 000000000A24: 80148C0A
  s_addc_u32    s21, s11, 0                             // 000000000A28: 8215800B
  v_mov_b32     v12, s20                                // 000000000A2C: 7E180214
  ds_read_b32   v12, v12                                // 000000000A30: D8D80000 0C00000C
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 000000000A38: BF8C0271
  v_mul_f32     v7, v7, v9                              // 000000000A3C: 100E1307
  v_mac_f32     v7, v1, v8                              // 000000000A40: 3E0E1101
  s_waitcnt     lgkmcnt(0)                              // 000000000A44: BF8C007F
  v_sub_f32     v7, v12, v7                             // 000000000A48: 080E0F0C
  s_waitcnt     vmcnt(0)                                // 000000000A4C: BF8C0F70
  v_mul_f32     v8, v11, v1                             // 000000000A50: 1010030B
  v_mac_f32     v8, v10, v7                             // 000000000A54: 3E100F0A
  ds_write_b32  v2, v8 offset:1024                      // 000000000A58: D8340400 00000802
  s_add_u32     s22, s12, 3                             // 000000000A60: 8016830C
  s_addc_u32    s23, s13, 0                             // 000000000A64: 8217800D
  s_waitcnt     lgkmcnt(0)                              // 000000000A68: BF8C007F
  s_barrier                                             // 000000000A6C: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 000000000A70: BF03FF00 00000100
  s_cbranch_scc0  label_02AE                            // 000000000A78: BF84000F
  s_movk_i32    s15, 0x007f                             // 000000000A7C: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 000000000A80: 7D0C000F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000A84: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000A88: 4A1004FF 00000400
  s_cbranch_execz  label_02AB                           // 000000000A90: BF880006
  ds_read2_b32  v[8:9], v8 offset1:128                  // 000000000A94: D8DC8000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000A9C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000AA0: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000AA4: D8340400 00000802
label_02AB:
  s_mov_b64     exec, s[24:25]                          // 000000000AAC: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000AB0: BF8C007F
  s_barrier                                             // 000000000AB4: BF8A0000
label_02AE:
  s_cmp_ge_i32  s0, 0x00000080                          // 000000000AB8: BF03FF00 00000080
  s_cbranch_scc0  label_02BF                            // 000000000AC0: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 000000000AC4: 7D0C00BF
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000AC8: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000ACC: 4A1004FF 00000400
  s_cbranch_execz  label_02BC                           // 000000000AD4: BF880006
  ds_read2_b32  v[8:9], v8 offset1:64                   // 000000000AD8: D8DC4000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000AE0: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000AE4: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000AE8: D8340400 00000802
label_02BC:
  s_mov_b64     exec, s[24:25]                          // 000000000AF0: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000AF4: BF8C007F
  s_barrier                                             // 000000000AF8: BF8A0000
label_02BF:
  s_cmp_ge_i32  s0, 64                                  // 000000000AFC: BF03C000
  s_cbranch_scc0  label_02CF                            // 000000000B00: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 000000000B04: 7D0C009F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000B08: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000B0C: 4A1004FF 00000400
  s_cbranch_execz  label_02CC                           // 000000000B14: BF880006
  ds_read2_b32  v[8:9], v8 offset1:32                   // 000000000B18: D8DC2000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000B20: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000B24: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000B28: D8340400 00000802
label_02CC:
  s_mov_b64     exec, s[24:25]                          // 000000000B30: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000B34: BF8C007F
  s_barrier                                             // 000000000B38: BF8A0000
label_02CF:
  s_cmp_ge_i32  s0, 32                                  // 000000000B3C: BF03A000
  s_cbranch_scc0  label_02DF                            // 000000000B40: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 000000000B44: 7D0C008F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000B48: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000B4C: 4A1004FF 00000400
  s_cbranch_execz  label_02DC                           // 000000000B54: BF880006
  ds_read2_b32  v[8:9], v8 offset1:16                   // 000000000B58: D8DC1000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000B60: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000B64: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000B68: D8340400 00000802
label_02DC:
  s_mov_b64     exec, s[24:25]                          // 000000000B70: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000B74: BF8C007F
  s_barrier                                             // 000000000B78: BF8A0000
label_02DF:
  s_cmp_ge_i32  s0, 16                                  // 000000000B7C: BF039000
  s_cbranch_scc0  label_02EF                            // 000000000B80: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 000000000B84: 7D0C0087
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000B88: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000B8C: 4A1004FF 00000400
  s_cbranch_execz  label_02EC                           // 000000000B94: BF880006
  ds_read2_b32  v[8:9], v8 offset1:8                    // 000000000B98: D8DC0800 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000BA0: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000BA4: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000BA8: D8340400 00000802
label_02EC:
  s_mov_b64     exec, s[24:25]                          // 000000000BB0: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000BB4: BF8C007F
  s_barrier                                             // 000000000BB8: BF8A0000
label_02EF:
  s_cmp_ge_i32  s0, 8                                   // 000000000BBC: BF038800
  s_cbranch_scc0  label_02FF                            // 000000000BC0: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 000000000BC4: 7D0C0083
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000BC8: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000BCC: 4A1004FF 00000400
  s_cbranch_execz  label_02FC                           // 000000000BD4: BF880006
  ds_read2_b32  v[8:9], v8 offset1:4                    // 000000000BD8: D8DC0400 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000BE0: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000BE4: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000BE8: D8340400 00000802
label_02FC:
  s_mov_b64     exec, s[24:25]                          // 000000000BF0: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000BF4: BF8C007F
  s_barrier                                             // 000000000BF8: BF8A0000
label_02FF:
  s_cmp_ge_i32  s0, 4                                   // 000000000BFC: BF038400
  s_cbranch_scc0  label_030F                            // 000000000C00: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 000000000C04: 7D0C0081
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000C08: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000C0C: 4A1004FF 00000400
  s_cbranch_execz  label_030C                           // 000000000C14: BF880006
  ds_read2_b32  v[8:9], v8 offset1:2                    // 000000000C18: D8DC0200 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000C20: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000C24: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000C28: D8340400 00000802
label_030C:
  s_mov_b64     exec, s[24:25]                          // 000000000C30: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000C34: BF8C007F
  s_barrier                                             // 000000000C38: BF8A0000
label_030F:
  s_cmp_ge_i32  s0, 2                                   // 000000000C3C: BF038200
  s_cbranch_scc0  label_031F                            // 000000000C40: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 000000000C44: 7D0C0080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000C48: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000C4C: 4A1004FF 00000400
  s_cbranch_execz  label_031C                           // 000000000C54: BF880006
  ds_read2_b32  v[8:9], v8 offset1:1                    // 000000000C58: D8DC0100 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000C60: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000C64: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000C68: D8340400 00000802
label_031C:
  s_mov_b64     exec, s[24:25]                          // 000000000C70: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000C74: BF8C007F
  s_barrier                                             // 000000000C78: BF8A0000
label_031F:
  v_cmp_eq_i32  vcc, 0, v0                              // 000000000C7C: 7D040080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000C80: BE98246A
  v_mov_b32     v8, s8                                  // 000000000C84: 7E100208
  s_cbranch_execz  label_033B                           // 000000000C88: BF880018
  v_mov_b32     v9, s20                                 // 000000000C8C: 7E120214
  v_mov_b32     v10, s16                                // 000000000C90: 7E140210
  ds_read_b32   v9, v9                                  // 000000000C94: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 000000000C9C: D8D80400 0A00000A
  v_mul_hi_u32  v8, s1, v8                              // 000000000CA4: D2D40008 00021001
  s_mul_i32     s15, s5, s8                             // 000000000CAC: 930F0805
  s_mul_i32     s20, s1, s8                             // 000000000CB0: 93140801
  v_mov_b32     v11, s22                                // 000000000CB4: 7E160216
  v_add_i32     v8, vcc, s15, v8                        // 000000000CB8: 4A10100F
  v_add_i32     v11, vcc, s20, v11                      // 000000000CBC: 4A161614
  v_mov_b32     v12, s23                                // 000000000CC0: 7E180217
  v_addc_u32    v12, vcc, v8, v12, vcc                  // 000000000CC4: 50181908
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000000CC8: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 000000000CD0: 4A0A1602
  v_mov_b32     v11, s3                                 // 000000000CD4: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 000000000CD8: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 000000000CDC: BF8C007F
  v_mac_f32     v10, s4, v9                             // 000000000CE0: 3E141204
  flat_store_dword  v[5:6], v10                         // 000000000CE4: DC700000 00000A05
label_033B:
  s_mov_b64     exec, s[24:25]                          // 000000000CEC: BEFE0418
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000CF0: BF8C0070
  s_barrier                                             // 000000000CF4: BF8A0000
  flat_load_dwordx2  v[8:9], v[14:15]                   // 000000000CF8: DC340000 0800000E
  flat_load_dwordx2  v[10:11], v[3:4]                   // 000000000D00: DC340000 0A000003
  s_add_u32     s20, s10, 16                            // 000000000D08: 8014900A
  s_addc_u32    s21, s11, 0                             // 000000000D0C: 8215800B
  v_mov_b32     v12, s20                                // 000000000D10: 7E180214
  ds_read_b32   v12, v12                                // 000000000D14: D8D80000 0C00000C
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 000000000D1C: BF8C0271
  v_mul_f32     v1, v1, v9                              // 000000000D20: 10021301
  v_mac_f32     v1, v7, v8                              // 000000000D24: 3E021107
  s_waitcnt     lgkmcnt(0)                              // 000000000D28: BF8C007F
  v_sub_f32     v1, v12, v1                             // 000000000D2C: 0802030C
  s_waitcnt     vmcnt(0)                                // 000000000D30: BF8C0F70
  v_mul_f32     v8, v11, v7                             // 000000000D34: 10100F0B
  v_mac_f32     v8, v10, v1                             // 000000000D38: 3E10030A
  ds_write_b32  v2, v8 offset:1024                      // 000000000D3C: D8340400 00000802
  s_add_u32     s22, s12, 4                             // 000000000D44: 8016840C
  s_addc_u32    s23, s13, 0                             // 000000000D48: 8217800D
  s_waitcnt     lgkmcnt(0)                              // 000000000D4C: BF8C007F
  s_barrier                                             // 000000000D50: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 000000000D54: BF03FF00 00000100
  s_cbranch_scc0  label_0367                            // 000000000D5C: BF84000F
  s_movk_i32    s15, 0x007f                             // 000000000D60: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 000000000D64: 7D0C000F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000D68: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000D6C: 4A1004FF 00000400
  s_cbranch_execz  label_0364                           // 000000000D74: BF880006
  ds_read2_b32  v[8:9], v8 offset1:128                  // 000000000D78: D8DC8000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000D80: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000D84: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000D88: D8340400 00000802
label_0364:
  s_mov_b64     exec, s[24:25]                          // 000000000D90: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000D94: BF8C007F
  s_barrier                                             // 000000000D98: BF8A0000
label_0367:
  s_cmp_ge_i32  s0, 0x00000080                          // 000000000D9C: BF03FF00 00000080
  s_cbranch_scc0  label_0378                            // 000000000DA4: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 000000000DA8: 7D0C00BF
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000DAC: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000DB0: 4A1004FF 00000400
  s_cbranch_execz  label_0375                           // 000000000DB8: BF880006
  ds_read2_b32  v[8:9], v8 offset1:64                   // 000000000DBC: D8DC4000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000DC4: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000DC8: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000DCC: D8340400 00000802
label_0375:
  s_mov_b64     exec, s[24:25]                          // 000000000DD4: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000DD8: BF8C007F
  s_barrier                                             // 000000000DDC: BF8A0000
label_0378:
  s_cmp_ge_i32  s0, 64                                  // 000000000DE0: BF03C000
  s_cbranch_scc0  label_0388                            // 000000000DE4: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 000000000DE8: 7D0C009F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000DEC: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000DF0: 4A1004FF 00000400
  s_cbranch_execz  label_0385                           // 000000000DF8: BF880006
  ds_read2_b32  v[8:9], v8 offset1:32                   // 000000000DFC: D8DC2000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000E04: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000E08: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000E0C: D8340400 00000802
label_0385:
  s_mov_b64     exec, s[24:25]                          // 000000000E14: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000E18: BF8C007F
  s_barrier                                             // 000000000E1C: BF8A0000
label_0388:
  s_cmp_ge_i32  s0, 32                                  // 000000000E20: BF03A000
  s_cbranch_scc0  label_0398                            // 000000000E24: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 000000000E28: 7D0C008F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000E2C: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000E30: 4A1004FF 00000400
  s_cbranch_execz  label_0395                           // 000000000E38: BF880006
  ds_read2_b32  v[8:9], v8 offset1:16                   // 000000000E3C: D8DC1000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000E44: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000E48: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000E4C: D8340400 00000802
label_0395:
  s_mov_b64     exec, s[24:25]                          // 000000000E54: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000E58: BF8C007F
  s_barrier                                             // 000000000E5C: BF8A0000
label_0398:
  s_cmp_ge_i32  s0, 16                                  // 000000000E60: BF039000
  s_cbranch_scc0  label_03A8                            // 000000000E64: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 000000000E68: 7D0C0087
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000E6C: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000E70: 4A1004FF 00000400
  s_cbranch_execz  label_03A5                           // 000000000E78: BF880006
  ds_read2_b32  v[8:9], v8 offset1:8                    // 000000000E7C: D8DC0800 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000E84: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000E88: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000E8C: D8340400 00000802
label_03A5:
  s_mov_b64     exec, s[24:25]                          // 000000000E94: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000E98: BF8C007F
  s_barrier                                             // 000000000E9C: BF8A0000
label_03A8:
  s_cmp_ge_i32  s0, 8                                   // 000000000EA0: BF038800
  s_cbranch_scc0  label_03B8                            // 000000000EA4: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 000000000EA8: 7D0C0083
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000EAC: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000EB0: 4A1004FF 00000400
  s_cbranch_execz  label_03B5                           // 000000000EB8: BF880006
  ds_read2_b32  v[8:9], v8 offset1:4                    // 000000000EBC: D8DC0400 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000EC4: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000EC8: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000ECC: D8340400 00000802
label_03B5:
  s_mov_b64     exec, s[24:25]                          // 000000000ED4: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000ED8: BF8C007F
  s_barrier                                             // 000000000EDC: BF8A0000
label_03B8:
  s_cmp_ge_i32  s0, 4                                   // 000000000EE0: BF038400
  s_cbranch_scc0  label_03C8                            // 000000000EE4: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 000000000EE8: 7D0C0081
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000EEC: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000EF0: 4A1004FF 00000400
  s_cbranch_execz  label_03C5                           // 000000000EF8: BF880006
  ds_read2_b32  v[8:9], v8 offset1:2                    // 000000000EFC: D8DC0200 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000F04: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000F08: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000F0C: D8340400 00000802
label_03C5:
  s_mov_b64     exec, s[24:25]                          // 000000000F14: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000F18: BF8C007F
  s_barrier                                             // 000000000F1C: BF8A0000
label_03C8:
  s_cmp_ge_i32  s0, 2                                   // 000000000F20: BF038200
  s_cbranch_scc0  label_03D8                            // 000000000F24: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 000000000F28: 7D0C0080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000F2C: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000000F30: 4A1004FF 00000400
  s_cbranch_execz  label_03D5                           // 000000000F38: BF880006
  ds_read2_b32  v[8:9], v8 offset1:1                    // 000000000F3C: D8DC0100 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000000F44: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000000F48: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000000F4C: D8340400 00000802
label_03D5:
  s_mov_b64     exec, s[24:25]                          // 000000000F54: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000000F58: BF8C007F
  s_barrier                                             // 000000000F5C: BF8A0000
label_03D8:
  v_cmp_eq_i32  vcc, 0, v0                              // 000000000F60: 7D040080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000000F64: BE98246A
  v_mov_b32     v8, s8                                  // 000000000F68: 7E100208
  s_cbranch_execz  label_03F4                           // 000000000F6C: BF880018
  v_mov_b32     v9, s20                                 // 000000000F70: 7E120214
  v_mov_b32     v10, s16                                // 000000000F74: 7E140210
  ds_read_b32   v9, v9                                  // 000000000F78: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 000000000F80: D8D80400 0A00000A
  v_mul_hi_u32  v8, s1, v8                              // 000000000F88: D2D40008 00021001
  s_mul_i32     s15, s5, s8                             // 000000000F90: 930F0805
  s_mul_i32     s20, s1, s8                             // 000000000F94: 93140801
  v_mov_b32     v11, s22                                // 000000000F98: 7E160216
  v_add_i32     v8, vcc, s15, v8                        // 000000000F9C: 4A10100F
  v_add_i32     v11, vcc, s20, v11                      // 000000000FA0: 4A161614
  v_mov_b32     v12, s23                                // 000000000FA4: 7E180217
  v_addc_u32    v12, vcc, v8, v12, vcc                  // 000000000FA8: 50181908
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000000FAC: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 000000000FB4: 4A0A1602
  v_mov_b32     v11, s3                                 // 000000000FB8: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 000000000FBC: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 000000000FC0: BF8C007F
  v_mac_f32     v10, s4, v9                             // 000000000FC4: 3E141204
  flat_store_dword  v[5:6], v10                         // 000000000FC8: DC700000 00000A05
label_03F4:
  s_mov_b64     exec, s[24:25]                          // 000000000FD0: BEFE0418
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000FD4: BF8C0070
  s_barrier                                             // 000000000FD8: BF8A0000
  flat_load_dwordx2  v[8:9], v[14:15]                   // 000000000FDC: DC340000 0800000E
  flat_load_dwordx2  v[10:11], v[3:4]                   // 000000000FE4: DC340000 0A000003
  s_add_u32     s20, s10, 20                            // 000000000FEC: 8014940A
  s_addc_u32    s21, s11, 0                             // 000000000FF0: 8215800B
  v_mov_b32     v12, s20                                // 000000000FF4: 7E180214
  ds_read_b32   v12, v12                                // 000000000FF8: D8D80000 0C00000C
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 000000001000: BF8C0271
  v_mul_f32     v7, v7, v9                              // 000000001004: 100E1307
  v_mac_f32     v7, v1, v8                              // 000000001008: 3E0E1101
  s_waitcnt     lgkmcnt(0)                              // 00000000100C: BF8C007F
  v_sub_f32     v7, v12, v7                             // 000000001010: 080E0F0C
  s_waitcnt     vmcnt(0)                                // 000000001014: BF8C0F70
  v_mul_f32     v8, v11, v1                             // 000000001018: 1010030B
  v_mac_f32     v8, v10, v7                             // 00000000101C: 3E100F0A
  ds_write_b32  v2, v8 offset:1024                      // 000000001020: D8340400 00000802
  s_add_u32     s22, s12, 5                             // 000000001028: 8016850C
  s_addc_u32    s23, s13, 0                             // 00000000102C: 8217800D
  s_waitcnt     lgkmcnt(0)                              // 000000001030: BF8C007F
  s_barrier                                             // 000000001034: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 000000001038: BF03FF00 00000100
  s_cbranch_scc0  label_0420                            // 000000001040: BF84000F
  s_movk_i32    s15, 0x007f                             // 000000001044: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 000000001048: 7D0C000F
  s_and_saveexec_b64  s[24:25], vcc                     // 00000000104C: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001050: 4A1004FF 00000400
  s_cbranch_execz  label_041D                           // 000000001058: BF880006
  ds_read2_b32  v[8:9], v8 offset1:128                  // 00000000105C: D8DC8000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001064: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001068: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 00000000106C: D8340400 00000802
label_041D:
  s_mov_b64     exec, s[24:25]                          // 000000001074: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001078: BF8C007F
  s_barrier                                             // 00000000107C: BF8A0000
label_0420:
  s_cmp_ge_i32  s0, 0x00000080                          // 000000001080: BF03FF00 00000080
  s_cbranch_scc0  label_0431                            // 000000001088: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 00000000108C: 7D0C00BF
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001090: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001094: 4A1004FF 00000400
  s_cbranch_execz  label_042E                           // 00000000109C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:64                   // 0000000010A0: D8DC4000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000010A8: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000010AC: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000010B0: D8340400 00000802
label_042E:
  s_mov_b64     exec, s[24:25]                          // 0000000010B8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000010BC: BF8C007F
  s_barrier                                             // 0000000010C0: BF8A0000
label_0431:
  s_cmp_ge_i32  s0, 64                                  // 0000000010C4: BF03C000
  s_cbranch_scc0  label_0441                            // 0000000010C8: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 0000000010CC: 7D0C009F
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000010D0: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000010D4: 4A1004FF 00000400
  s_cbranch_execz  label_043E                           // 0000000010DC: BF880006
  ds_read2_b32  v[8:9], v8 offset1:32                   // 0000000010E0: D8DC2000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000010E8: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000010EC: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000010F0: D8340400 00000802
label_043E:
  s_mov_b64     exec, s[24:25]                          // 0000000010F8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000010FC: BF8C007F
  s_barrier                                             // 000000001100: BF8A0000
label_0441:
  s_cmp_ge_i32  s0, 32                                  // 000000001104: BF03A000
  s_cbranch_scc0  label_0451                            // 000000001108: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 00000000110C: 7D0C008F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001110: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001114: 4A1004FF 00000400
  s_cbranch_execz  label_044E                           // 00000000111C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:16                   // 000000001120: D8DC1000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001128: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000112C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001130: D8340400 00000802
label_044E:
  s_mov_b64     exec, s[24:25]                          // 000000001138: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000113C: BF8C007F
  s_barrier                                             // 000000001140: BF8A0000
label_0451:
  s_cmp_ge_i32  s0, 16                                  // 000000001144: BF039000
  s_cbranch_scc0  label_0461                            // 000000001148: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 00000000114C: 7D0C0087
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001150: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001154: 4A1004FF 00000400
  s_cbranch_execz  label_045E                           // 00000000115C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:8                    // 000000001160: D8DC0800 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001168: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000116C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001170: D8340400 00000802
label_045E:
  s_mov_b64     exec, s[24:25]                          // 000000001178: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000117C: BF8C007F
  s_barrier                                             // 000000001180: BF8A0000
label_0461:
  s_cmp_ge_i32  s0, 8                                   // 000000001184: BF038800
  s_cbranch_scc0  label_0471                            // 000000001188: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 00000000118C: 7D0C0083
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001190: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001194: 4A1004FF 00000400
  s_cbranch_execz  label_046E                           // 00000000119C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:4                    // 0000000011A0: D8DC0400 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000011A8: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000011AC: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000011B0: D8340400 00000802
label_046E:
  s_mov_b64     exec, s[24:25]                          // 0000000011B8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000011BC: BF8C007F
  s_barrier                                             // 0000000011C0: BF8A0000
label_0471:
  s_cmp_ge_i32  s0, 4                                   // 0000000011C4: BF038400
  s_cbranch_scc0  label_0481                            // 0000000011C8: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 0000000011CC: 7D0C0081
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000011D0: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000011D4: 4A1004FF 00000400
  s_cbranch_execz  label_047E                           // 0000000011DC: BF880006
  ds_read2_b32  v[8:9], v8 offset1:2                    // 0000000011E0: D8DC0200 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000011E8: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000011EC: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000011F0: D8340400 00000802
label_047E:
  s_mov_b64     exec, s[24:25]                          // 0000000011F8: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000011FC: BF8C007F
  s_barrier                                             // 000000001200: BF8A0000
label_0481:
  s_cmp_ge_i32  s0, 2                                   // 000000001204: BF038200
  s_cbranch_scc0  label_0491                            // 000000001208: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 00000000120C: 7D0C0080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001210: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001214: 4A1004FF 00000400
  s_cbranch_execz  label_048E                           // 00000000121C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:1                    // 000000001220: D8DC0100 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001228: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000122C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001230: D8340400 00000802
label_048E:
  s_mov_b64     exec, s[24:25]                          // 000000001238: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000123C: BF8C007F
  s_barrier                                             // 000000001240: BF8A0000
label_0491:
  v_cmp_eq_i32  vcc, 0, v0                              // 000000001244: 7D040080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001248: BE98246A
  v_mov_b32     v8, s8                                  // 00000000124C: 7E100208
  s_cbranch_execz  label_04AD                           // 000000001250: BF880018
  v_mov_b32     v9, s20                                 // 000000001254: 7E120214
  v_mov_b32     v10, s16                                // 000000001258: 7E140210
  ds_read_b32   v9, v9                                  // 00000000125C: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 000000001264: D8D80400 0A00000A
  v_mul_hi_u32  v8, s1, v8                              // 00000000126C: D2D40008 00021001
  s_mul_i32     s15, s5, s8                             // 000000001274: 930F0805
  s_mul_i32     s20, s1, s8                             // 000000001278: 93140801
  v_mov_b32     v11, s22                                // 00000000127C: 7E160216
  v_add_i32     v8, vcc, s15, v8                        // 000000001280: 4A10100F
  v_add_i32     v11, vcc, s20, v11                      // 000000001284: 4A161614
  v_mov_b32     v12, s23                                // 000000001288: 7E180217
  v_addc_u32    v12, vcc, v8, v12, vcc                  // 00000000128C: 50181908
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000001290: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 000000001298: 4A0A1602
  v_mov_b32     v11, s3                                 // 00000000129C: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 0000000012A0: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 0000000012A4: BF8C007F
  v_mac_f32     v10, s4, v9                             // 0000000012A8: 3E141204
  flat_store_dword  v[5:6], v10                         // 0000000012AC: DC700000 00000A05
label_04AD:
  s_mov_b64     exec, s[24:25]                          // 0000000012B4: BEFE0418
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000012B8: BF8C0070
  s_barrier                                             // 0000000012BC: BF8A0000
  flat_load_dwordx2  v[8:9], v[14:15]                   // 0000000012C0: DC340000 0800000E
  flat_load_dwordx2  v[10:11], v[3:4]                   // 0000000012C8: DC340000 0A000003
  s_add_u32     s20, s10, 24                            // 0000000012D0: 8014980A
  s_addc_u32    s21, s11, 0                             // 0000000012D4: 8215800B
  v_mov_b32     v12, s20                                // 0000000012D8: 7E180214
  ds_read_b32   v12, v12                                // 0000000012DC: D8D80000 0C00000C
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 0000000012E4: BF8C0271
  v_mul_f32     v1, v1, v9                              // 0000000012E8: 10021301
  v_mac_f32     v1, v7, v8                              // 0000000012EC: 3E021107
  s_waitcnt     lgkmcnt(0)                              // 0000000012F0: BF8C007F
  v_sub_f32     v13, v12, v1                            // 0000000012F4: 081A030C
  s_waitcnt     vmcnt(0)                                // 0000000012F8: BF8C0F70
  v_mul_f32     v8, v11, v7                             // 0000000012FC: 10100F0B
  v_mac_f32     v8, v10, v13                            // 000000001300: 3E101B0A
  ds_write_b32  v2, v8 offset:1024                      // 000000001304: D8340400 00000802
  s_add_u32     s22, s12, 6                             // 00000000130C: 8016860C
  s_addc_u32    s23, s13, 0                             // 000000001310: 8217800D
  s_waitcnt     lgkmcnt(0)                              // 000000001314: BF8C007F
  s_barrier                                             // 000000001318: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 00000000131C: BF03FF00 00000100
  s_cbranch_scc0  label_04D9                            // 000000001324: BF84000F
  s_movk_i32    s15, 0x007f                             // 000000001328: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 00000000132C: 7D0C000F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001330: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001334: 4A1004FF 00000400
  s_cbranch_execz  label_04D6                           // 00000000133C: BF880006
  ds_read2_b32  v[8:9], v8 offset1:128                  // 000000001340: D8DC8000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001348: BF8C007F
  v_add_f32     v8, v9, v8                              // 00000000134C: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001350: D8340400 00000802
label_04D6:
  s_mov_b64     exec, s[24:25]                          // 000000001358: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 00000000135C: BF8C007F
  s_barrier                                             // 000000001360: BF8A0000
label_04D9:
  s_cmp_ge_i32  s0, 0x00000080                          // 000000001364: BF03FF00 00000080
  s_cbranch_scc0  label_04EA                            // 00000000136C: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 000000001370: 7D0C00BF
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001374: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001378: 4A1004FF 00000400
  s_cbranch_execz  label_04E7                           // 000000001380: BF880006
  ds_read2_b32  v[8:9], v8 offset1:64                   // 000000001384: D8DC4000 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000138C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001390: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001394: D8340400 00000802
label_04E7:
  s_mov_b64     exec, s[24:25]                          // 00000000139C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000013A0: BF8C007F
  s_barrier                                             // 0000000013A4: BF8A0000
label_04EA:
  s_cmp_ge_i32  s0, 64                                  // 0000000013A8: BF03C000
  s_cbranch_scc0  label_04FA                            // 0000000013AC: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 0000000013B0: 7D0C009F
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000013B4: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000013B8: 4A1004FF 00000400
  s_cbranch_execz  label_04F7                           // 0000000013C0: BF880006
  ds_read2_b32  v[8:9], v8 offset1:32                   // 0000000013C4: D8DC2000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000013CC: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000013D0: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000013D4: D8340400 00000802
label_04F7:
  s_mov_b64     exec, s[24:25]                          // 0000000013DC: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000013E0: BF8C007F
  s_barrier                                             // 0000000013E4: BF8A0000
label_04FA:
  s_cmp_ge_i32  s0, 32                                  // 0000000013E8: BF03A000
  s_cbranch_scc0  label_050A                            // 0000000013EC: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 0000000013F0: 7D0C008F
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000013F4: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000013F8: 4A1004FF 00000400
  s_cbranch_execz  label_0507                           // 000000001400: BF880006
  ds_read2_b32  v[8:9], v8 offset1:16                   // 000000001404: D8DC1000 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000140C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001410: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001414: D8340400 00000802
label_0507:
  s_mov_b64     exec, s[24:25]                          // 00000000141C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001420: BF8C007F
  s_barrier                                             // 000000001424: BF8A0000
label_050A:
  s_cmp_ge_i32  s0, 16                                  // 000000001428: BF039000
  s_cbranch_scc0  label_051A                            // 00000000142C: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 000000001430: 7D0C0087
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001434: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001438: 4A1004FF 00000400
  s_cbranch_execz  label_0517                           // 000000001440: BF880006
  ds_read2_b32  v[8:9], v8 offset1:8                    // 000000001444: D8DC0800 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000144C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001450: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001454: D8340400 00000802
label_0517:
  s_mov_b64     exec, s[24:25]                          // 00000000145C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001460: BF8C007F
  s_barrier                                             // 000000001464: BF8A0000
label_051A:
  s_cmp_ge_i32  s0, 8                                   // 000000001468: BF038800
  s_cbranch_scc0  label_052A                            // 00000000146C: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 000000001470: 7D0C0083
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001474: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001478: 4A1004FF 00000400
  s_cbranch_execz  label_0527                           // 000000001480: BF880006
  ds_read2_b32  v[8:9], v8 offset1:4                    // 000000001484: D8DC0400 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000148C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001490: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001494: D8340400 00000802
label_0527:
  s_mov_b64     exec, s[24:25]                          // 00000000149C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000014A0: BF8C007F
  s_barrier                                             // 0000000014A4: BF8A0000
label_052A:
  s_cmp_ge_i32  s0, 4                                   // 0000000014A8: BF038400
  s_cbranch_scc0  label_053A                            // 0000000014AC: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 0000000014B0: 7D0C0081
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000014B4: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000014B8: 4A1004FF 00000400
  s_cbranch_execz  label_0537                           // 0000000014C0: BF880006
  ds_read2_b32  v[8:9], v8 offset1:2                    // 0000000014C4: D8DC0200 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000014CC: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000014D0: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000014D4: D8340400 00000802
label_0537:
  s_mov_b64     exec, s[24:25]                          // 0000000014DC: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000014E0: BF8C007F
  s_barrier                                             // 0000000014E4: BF8A0000
label_053A:
  s_cmp_ge_i32  s0, 2                                   // 0000000014E8: BF038200
  s_cbranch_scc0  label_054A                            // 0000000014EC: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 0000000014F0: 7D0C0080
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000014F4: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000014F8: 4A1004FF 00000400
  s_cbranch_execz  label_0547                           // 000000001500: BF880006
  ds_read2_b32  v[8:9], v8 offset1:1                    // 000000001504: D8DC0100 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000150C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001510: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001514: D8340400 00000802
label_0547:
  s_mov_b64     exec, s[24:25]                          // 00000000151C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001520: BF8C007F
  s_barrier                                             // 000000001524: BF8A0000
label_054A:
  v_cmp_eq_i32  vcc, 0, v0                              // 000000001528: 7D040080
  s_and_saveexec_b64  s[24:25], vcc                     // 00000000152C: BE98246A
  v_mov_b32     v8, s8                                  // 000000001530: 7E100208
  s_cbranch_execz  label_0566                           // 000000001534: BF880018
  v_mov_b32     v9, s20                                 // 000000001538: 7E120214
  v_mov_b32     v10, s16                                // 00000000153C: 7E140210
  ds_read_b32   v9, v9                                  // 000000001540: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 000000001548: D8D80400 0A00000A
  v_mul_hi_u32  v8, s1, v8                              // 000000001550: D2D40008 00021001
  s_mul_i32     s15, s5, s8                             // 000000001558: 930F0805
  s_mul_i32     s20, s1, s8                             // 00000000155C: 93140801
  v_mov_b32     v11, s22                                // 000000001560: 7E160216
  v_add_i32     v8, vcc, s15, v8                        // 000000001564: 4A10100F
  v_add_i32     v11, vcc, s20, v11                      // 000000001568: 4A161614
  v_mov_b32     v12, s23                                // 00000000156C: 7E180217
  v_addc_u32    v12, vcc, v8, v12, vcc                  // 000000001570: 50181908
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000001574: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 00000000157C: 4A0A1602
  v_mov_b32     v11, s3                                 // 000000001580: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 000000001584: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 000000001588: BF8C007F
  v_mac_f32     v10, s4, v9                             // 00000000158C: 3E141204
  flat_store_dword  v[5:6], v10                         // 000000001590: DC700000 00000A05
label_0566:
  s_mov_b64     exec, s[24:25]                          // 000000001598: BEFE0418
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000159C: BF8C0070
  s_barrier                                             // 0000000015A0: BF8A0000
  flat_load_dwordx2  v[8:9], v[14:15]                   // 0000000015A4: DC340000 0800000E
  flat_load_dwordx2  v[10:11], v[3:4]                   // 0000000015AC: DC340000 0A000003
  s_add_u32     s20, s10, 28                            // 0000000015B4: 80149C0A
  s_addc_u32    s21, s11, 0                             // 0000000015B8: 8215800B
  v_mov_b32     v12, s20                                // 0000000015BC: 7E180214
  ds_read_b32   v12, v12                                // 0000000015C0: D8D80000 0C00000C
  s_waitcnt     vmcnt(1) & lgkmcnt(2)                   // 0000000015C8: BF8C0271
  v_mul_f32     v7, v7, v9                              // 0000000015CC: 100E1307
  v_mac_f32     v7, v13, v8                             // 0000000015D0: 3E0E110D
  s_waitcnt     lgkmcnt(0)                              // 0000000015D4: BF8C007F
  v_sub_f32     v7, v12, v7                             // 0000000015D8: 080E0F0C
  s_waitcnt     vmcnt(0)                                // 0000000015DC: BF8C0F70
  v_mul_f32     v8, v11, v13                            // 0000000015E0: 10101B0B
  v_mac_f32     v8, v10, v7                             // 0000000015E4: 3E100F0A
  ds_write_b32  v2, v8 offset:1024                      // 0000000015E8: D8340400 00000802
  s_add_u32     s22, s12, 7                             // 0000000015F0: 8016870C
  s_addc_u32    s23, s13, 0                             // 0000000015F4: 8217800D
  s_waitcnt     lgkmcnt(0)                              // 0000000015F8: BF8C007F
  s_barrier                                             // 0000000015FC: BF8A0000
  s_cmp_ge_i32  s0, 0x00000100                          // 000000001600: BF03FF00 00000100
  s_cbranch_scc0  label_0592                            // 000000001608: BF84000F
  s_movk_i32    s15, 0x007f                             // 00000000160C: B00F007F
  v_cmp_ge_i32  vcc, s15, v0                            // 000000001610: 7D0C000F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001614: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 000000001618: 4A1004FF 00000400
  s_cbranch_execz  label_058F                           // 000000001620: BF880006
  ds_read2_b32  v[8:9], v8 offset1:128                  // 000000001624: D8DC8000 08000008
  s_waitcnt     lgkmcnt(0)                              // 00000000162C: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001630: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001634: D8340400 00000802
label_058F:
  s_mov_b64     exec, s[24:25]                          // 00000000163C: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001640: BF8C007F
  s_barrier                                             // 000000001644: BF8A0000
label_0592:
  s_cmp_ge_i32  s0, 0x00000080                          // 000000001648: BF03FF00 00000080
  s_cbranch_scc0  label_05A3                            // 000000001650: BF84000E
  v_cmp_ge_i32  vcc, 63, v0                             // 000000001654: 7D0C00BF
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001658: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 00000000165C: 4A1004FF 00000400
  s_cbranch_execz  label_05A0                           // 000000001664: BF880006
  ds_read2_b32  v[8:9], v8 offset1:64                   // 000000001668: D8DC4000 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001670: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001674: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001678: D8340400 00000802
label_05A0:
  s_mov_b64     exec, s[24:25]                          // 000000001680: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001684: BF8C007F
  s_barrier                                             // 000000001688: BF8A0000
label_05A3:
  s_cmp_ge_i32  s0, 64                                  // 00000000168C: BF03C000
  s_cbranch_scc0  label_05B3                            // 000000001690: BF84000E
  v_cmp_ge_i32  vcc, 31, v0                             // 000000001694: 7D0C009F
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001698: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 00000000169C: 4A1004FF 00000400
  s_cbranch_execz  label_05B0                           // 0000000016A4: BF880006
  ds_read2_b32  v[8:9], v8 offset1:32                   // 0000000016A8: D8DC2000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000016B0: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000016B4: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000016B8: D8340400 00000802
label_05B0:
  s_mov_b64     exec, s[24:25]                          // 0000000016C0: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000016C4: BF8C007F
  s_barrier                                             // 0000000016C8: BF8A0000
label_05B3:
  s_cmp_ge_i32  s0, 32                                  // 0000000016CC: BF03A000
  s_cbranch_scc0  label_05C3                            // 0000000016D0: BF84000E
  v_cmp_ge_i32  vcc, 15, v0                             // 0000000016D4: 7D0C008F
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000016D8: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000016DC: 4A1004FF 00000400
  s_cbranch_execz  label_05C0                           // 0000000016E4: BF880006
  ds_read2_b32  v[8:9], v8 offset1:16                   // 0000000016E8: D8DC1000 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000016F0: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000016F4: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000016F8: D8340400 00000802
label_05C0:
  s_mov_b64     exec, s[24:25]                          // 000000001700: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001704: BF8C007F
  s_barrier                                             // 000000001708: BF8A0000
label_05C3:
  s_cmp_ge_i32  s0, 16                                  // 00000000170C: BF039000
  s_cbranch_scc0  label_05D3                            // 000000001710: BF84000E
  v_cmp_ge_i32  vcc, 7, v0                              // 000000001714: 7D0C0087
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001718: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 00000000171C: 4A1004FF 00000400
  s_cbranch_execz  label_05D0                           // 000000001724: BF880006
  ds_read2_b32  v[8:9], v8 offset1:8                    // 000000001728: D8DC0800 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001730: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001734: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001738: D8340400 00000802
label_05D0:
  s_mov_b64     exec, s[24:25]                          // 000000001740: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001744: BF8C007F
  s_barrier                                             // 000000001748: BF8A0000
label_05D3:
  s_cmp_ge_i32  s0, 8                                   // 00000000174C: BF038800
  s_cbranch_scc0  label_05E3                            // 000000001750: BF84000E
  v_cmp_ge_i32  vcc, 3, v0                              // 000000001754: 7D0C0083
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001758: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 00000000175C: 4A1004FF 00000400
  s_cbranch_execz  label_05E0                           // 000000001764: BF880006
  ds_read2_b32  v[8:9], v8 offset1:4                    // 000000001768: D8DC0400 08000008
  s_waitcnt     lgkmcnt(0)                              // 000000001770: BF8C007F
  v_add_f32     v8, v9, v8                              // 000000001774: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 000000001778: D8340400 00000802
label_05E0:
  s_mov_b64     exec, s[24:25]                          // 000000001780: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001784: BF8C007F
  s_barrier                                             // 000000001788: BF8A0000
label_05E3:
  s_cmp_ge_i32  s0, 4                                   // 00000000178C: BF038400
  s_cbranch_scc0  label_05F3                            // 000000001790: BF84000E
  v_cmp_ge_i32  vcc, 1, v0                              // 000000001794: 7D0C0081
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001798: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 00000000179C: 4A1004FF 00000400
  s_cbranch_execz  label_05F0                           // 0000000017A4: BF880006
  ds_read2_b32  v[8:9], v8 offset1:2                    // 0000000017A8: D8DC0200 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000017B0: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000017B4: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000017B8: D8340400 00000802
label_05F0:
  s_mov_b64     exec, s[24:25]                          // 0000000017C0: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 0000000017C4: BF8C007F
  s_barrier                                             // 0000000017C8: BF8A0000
label_05F3:
  s_cmp_ge_i32  s0, 2                                   // 0000000017CC: BF038200
  s_cbranch_scc0  label_0603                            // 0000000017D0: BF84000E
  v_cmp_ge_i32  vcc, 0, v0                              // 0000000017D4: 7D0C0080
  s_and_saveexec_b64  s[24:25], vcc                     // 0000000017D8: BE98246A
  v_add_i32     v8, vcc, 0x00000400, v2                 // 0000000017DC: 4A1004FF 00000400
  s_cbranch_execz  label_0600                           // 0000000017E4: BF880006
  ds_read2_b32  v[8:9], v8 offset1:1                    // 0000000017E8: D8DC0100 08000008
  s_waitcnt     lgkmcnt(0)                              // 0000000017F0: BF8C007F
  v_add_f32     v8, v9, v8                              // 0000000017F4: 06101109
  ds_write_b32  v2, v8 offset:1024                      // 0000000017F8: D8340400 00000802
label_0600:
  s_mov_b64     exec, s[24:25]                          // 000000001800: BEFE0418
  s_waitcnt     lgkmcnt(0)                              // 000000001804: BF8C007F
  s_barrier                                             // 000000001808: BF8A0000
label_0603:
  v_cmp_eq_i32  vcc, 0, v0                              // 00000000180C: 7D040080
  s_and_saveexec_b64  s[24:25], vcc                     // 000000001810: BE98246A
  v_mov_b32     v8, s8                                  // 000000001814: 7E100208
  s_cbranch_execz  label_061F                           // 000000001818: BF880018
  v_mov_b32     v9, s20                                 // 00000000181C: 7E120214
  v_mov_b32     v10, s16                                // 000000001820: 7E140210
  ds_read_b32   v9, v9                                  // 000000001824: D8D80000 09000009
  ds_read_b32   v10, v10 offset:1024                    // 00000000182C: D8D80400 0A00000A
  v_mul_hi_u32  v8, s1, v8                              // 000000001834: D2D40008 00021001
  s_mul_i32     s15, s5, s8                             // 00000000183C: 930F0805
  s_mul_i32     s20, s1, s8                             // 000000001840: 93140801
  v_mov_b32     v11, s22                                // 000000001844: 7E160216
  v_add_i32     v8, vcc, s15, v8                        // 000000001848: 4A10100F
  v_add_i32     v11, vcc, s20, v11                      // 00000000184C: 4A161614
  v_mov_b32     v12, s23                                // 000000001850: 7E180217
  v_addc_u32    v12, vcc, v8, v12, vcc                  // 000000001854: 50181908
  v_lshl_b64    v[11:12], v[11:12], 2                   // 000000001858: D2C2000B 0001050B
  v_add_i32     v5, vcc, s2, v11                        // 000000001860: 4A0A1602
  v_mov_b32     v11, s3                                 // 000000001864: 7E160203
  v_addc_u32    v6, vcc, v11, v12, vcc                  // 000000001868: 500C190B
  s_waitcnt     lgkmcnt(0)                              // 00000000186C: BF8C007F
  v_mac_f32     v10, s4, v9                             // 000000001870: 3E141204
  flat_store_dword  v[5:6], v10                         // 000000001874: DC700000 00000A05
label_061F:
  s_mov_b64     exec, s[24:25]                          // 00000000187C: BEFE0418
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000001880: BF8C0070
  s_barrier                                             // 000000001884: BF8A0000
  s_add_u32     s10, s10, 32                            // 000000001888: 800AA00A
  s_addc_u32    s11, s11, 0                             // 00000000188C: 820B800B
  s_add_u32     s12, s12, 8                             // 000000001890: 800C880C
  s_addc_u32    s13, s13, 0                             // 000000001894: 820D800D
  s_sub_i32     s14, s14, 8                             // 000000001898: 818E880E
  v_mov_b32     v8, v7                                  // 00000000189C: 7E100307
  s_branch      label_005C                              // 0000000018A0: BF82FA33
label_0629:
  s_add_u32     s6, s6, 0x00000100                      // 0000000018A4: 8006FF06 00000100
  s_addc_u32    s7, s7, 0                               // 0000000018AC: 82078007
  s_add_u32     s9, s9, 0x00000100                      // 0000000018B0: 8009FF09 00000100
  s_cmp_ge_i32  s9, s1                                  // 0000000018B8: BF030109
  s_cbranch_scc1  label_0631                            // 0000000018BC: BF850001
  s_branch      label_0046                              // 0000000018C0: BF82FA15
label_0631:
  s_endpgm                                              // 0000000018C4: BF810000
end

